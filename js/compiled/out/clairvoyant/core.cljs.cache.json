["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$console",["^ ","~$groupCollapsed",["^ "],"~$log",["^ "],"~$groupEnd",["^ "],"~$error",["^ "]]],"~:use-macros",["^ ","~$walk","~$clojure.walk","~$prewalk","^:"],"~:excludes",["~#set",[]],"~:name","~$clairvoyant.core","~:imports",null,"~:requires",["^ ","^:","^:"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^9","^:","^;","^:"],"~:defs",["^ ","~$trace-enter",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","~:line",19,"~:column",7,"~:end-line",19,"~:end-column",18,"~:arglists",["~#list",["~$quote",["^N",[["~$tracer","~$trace-data"]]]]],"~:doc","Call the -trace-enter method for a given tracer with trace-data.\n  tracer must satisfy ITraceEnter."],"^>","~$clairvoyant.core/trace-enter","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",18,"~:method-params",["^N",[["^P","^Q"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^J",1,"~:variadic?",false,"^I",19,"~:ret-tag","~$any","^K",19,"~:max-fixed-arity",2,"~:fn-var",true,"^M",["^N",["^O",["^N",[["^P","^Q"]]]]],"^R","Call the -trace-enter method for a given tracer with trace-data.\n  tracer must satisfy ITraceEnter."],"~$default-tracer",["^ ","^>","~$clairvoyant.core/default-tracer","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^I",66,"^J",1,"^K",66,"^L",20,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",66,"^J",6,"^K",66,"^L",20],"~:tag","~$clairvoyant.core/t_clairvoyant$core24739"],"~$-trace-enter",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",8,"^J",4,"^K",8,"^L",16,"~:protocol","~$clairvoyant.core/ITraceEnter","^R",null,"^M",["^N",["^O",["^N",[["~$this","^Q"]]]]]],"^15","^16","^>","~$clairvoyant.core/-trace-enter","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",16,"^T",["^N",[["^17","^Q"]]],"^U",null,"^V",["^N",[null,null]],"^J",1,"^W",false,"^I",7,"^X","^Y","^K",8,"^Z",2,"^[",true,"^M",["^N",["^O",["^N",[["^17","^Q"]]]]],"^R",null],"~$t_clairvoyant$core24739",["^ ","~:num-fields",7,"~:protocols",["^=",["~$clairvoyant.core/ITraceError","^16","~$cljs.core/IMeta","~$clairvoyant.core/ITraceExit","~$cljs.core/IWithMeta"]],"^>","^13","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","~:type",true,"~:anonymous",true,"^J",5,"^I",107,"~:record",false,"^12","~$function","~:skip-protocol-flag",["^=",["^1=","^1?"]]],"~$-trace-exit",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",14,"^J",4,"^K",14,"^L",15,"^15","^1>","^R",null,"^M",["^N",["^O",["^N",[["^17","^Q"]]]]]],"^15","^1>","^>","~$clairvoyant.core/-trace-exit","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",15,"^T",["^N",[["^17","^Q"]]],"^U",null,"^V",["^N",[null,null]],"^J",1,"^W",false,"^I",13,"^X","^Y","^K",14,"^Z",2,"^[",true,"^M",["^N",["^O",["^N",[["^17","^Q"]]]]],"^R",null],"~$cljs-devtools-tracer",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",169,"^J",7,"^K",169,"^L",27,"^M",["^N",["^O",["^N",[["~$&",["^ ","~:keys",["~$color"],"~:as","~$options"]]]]]],"~:top-fn",["^ ","^W",true,"^Z",0,"^T",[["^N",[["^ ","^1H",["^1I"],"^1J","^1K"]]]],"^M",["^N",[["~$&",["^ ","^1H",["^1I"],"^1J","^1K"]]]],"^V",["^N",[null]]]],"^>","~$clairvoyant.core/cljs-devtools-tracer","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",27,"^1L",["^ ","^W",true,"^Z",0,"^T",[["^N",[["^ ","^1H",["^1I"],"^1J","^1K"]]]],"^M",["^N",[["~$&",["^ ","^1H",["^1I"],"^1J","^1K"]]]],"^V",["^N",[null]]],"^T",[["^N",[["^ ","^1H",["^1I"],"^1J","^1K"]]]],"^U",null,"^V",["^N",[null]],"^J",1,"^W",true,"^I",169,"^X","^Y","^K",169,"^Z",0,"^[",true,"^M",["^N",[["~$&",["^ ","^1H",["^1I"],"^1J","^1K"]]]]],"~$-trace-error",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",11,"^J",4,"^K",11,"^L",16,"^15","^1<","^R",null,"^M",["^N",["^O",["^N",[["^17","^Q"]]]]]],"^15","^1<","^>","~$clairvoyant.core/-trace-error","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",16,"^T",["^N",[["^17","^Q"]]],"^U",null,"^V",["^N",[null,null]],"^J",1,"^W",false,"^I",10,"^X","^Y","^K",11,"^Z",2,"^[",true,"^M",["^N",["^O",["^N",[["^17","^Q"]]]]],"^R",null],"~$fn-re",["^ ","^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",42,"^J",16,"^K",42,"^L",21,"~:private",true],"^1Q",true,"^>","~$clairvoyant.core/fn-re","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",21,"^J",1,"^I",42,"^K",42,"^12","^Y","^R","Matches the function signature of the result of (str f) where f is a\n  function. Captures the argument list and identifier (if possible)."],"~$trace-error",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",25,"^J",7,"^K",25,"^L",18,"^M",["^N",["^O",["^N",[["^P","^Q"]]]]],"^R","Call the -trace-error method for a given tracer with trace-data.\n  tracer must satisfy ITraceError."],"^>","~$clairvoyant.core/trace-error","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",18,"^T",["^N",[["^P","^Q"]]],"^U",null,"^V",["^N",[null,null]],"^J",1,"^W",false,"^I",25,"^X","^Y","^K",25,"^Z",2,"^[",true,"^M",["^N",["^O",["^N",[["^P","^Q"]]]]],"^R","Call the -trace-error method for a given tracer with trace-data.\n  tracer must satisfy ITraceError."],"~$devmode",["^ ","^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",40,"^J",14,"^K",40,"^L",21,"^12","~$boolean","~:declared",true],"^>","~$clairvoyant.core/devmode","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",21,"^J",1,"^I",40,"^1W",true,"^K",40,"^12","^1V"],"~$ITraceError",["^ ","^G",["^ ","~:protocol-symbol",true,"^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^L",25,"^J",14,"^I",10,"~:protocol-info",["^ ","~:methods",["^ ","^1N",[["^17","^Q"]]]],"^K",10,"^R",null,"~:jsdoc",["^N",["@interface"]]],"^1Z",true,"^>","^1<","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",25,"^J",1,"^I",10,"^1[",["^ ","^20",["^ ","^1N",[["^17","^Q"]]]],"~:info",null,"^K",10,"^12","^Y","~:impls",["^=",["^13","~$clairvoyant.core/t_clairvoyant$core24755"]],"^R",null,"^21",["^N",["@interface"]]],"~$fn-signature",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",47,"^J",8,"^K",47,"^L",20,"^1Q",true,"^M",["^N",["^O",["^N",[["~$f"]]]]],"^R","Return the function signature of f.\n\n  Example:\n\n    (fn-signature inc)\n    ;;=> (fn inc [x])\n\n    (fn-signature map)\n    ;; => (fn [f c1 c2 c3 var_args])\n  "],"^1Q",true,"^>","~$clairvoyant.core/fn-signature","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",20,"^T",["^N",[["~$f"]]],"^U",null,"^V",["^N",[null,null]],"^J",1,"^W",false,"^I",47,"^X","~$cljs.core/List","^K",47,"^Z",1,"^[",true,"^M",["^N",["^O",["^N",[["~$f"]]]]],"^R","Return the function signature of f.\n\n  Example:\n\n    (fn-signature inc)\n    ;;=> (fn inc [x])\n\n    (fn-signature map)\n    ;; => (fn [f c1 c2 c3 var_args])\n  "],"~$ITraceEnter",["^ ","^G",["^ ","^1Z",true,"^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^L",25,"^J",14,"^I",7,"^1[",["^ ","^20",["^ ","^14",[["^17","^Q"]]]],"^K",7,"^R",null,"^21",["^N",["@interface"]]],"^1Z",true,"^>","^16","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",25,"^J",1,"^I",7,"^1[",["^ ","^20",["^ ","^14",[["^17","^Q"]]]],"^22",null,"^K",7,"^12","^Y","^23",["^=",["^13","^24"]],"^R",null,"^21",["^N",["@interface"]]],"~$->t_clairvoyant$core24739",["^ ","^F",null,"^G",["^ ","^1A",true,"^1;",["^=",["^1<","^16","^1=","^1>","^1?"]],"^1D",["^=",["^1=","^1?"]],"~:factory","~:positional","^M",["^N",["^O",["^N",[["~$pr-val*","~$pr-val","~$log-binding","~$log-exit","~$has-bindings?","~$fn-like?","~$meta24740"]]]]],"^R","Positional factory function for clairvoyant.core/t_clairvoyant$core24739.","^H",null],"^1;",["^=",["^1<","^16","^1=","^1>","^1?"]],"^>","~$clairvoyant.core/->t_clairvoyant$core24739","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^T",["^N",[["^2<","^2=","^2>","^2?","^2@","^2A","^2B"]]],"^U",null,"^V",["^N",[null,null]],"^1A",true,"^J",5,"^W",false,"^2:","^2;","^I",107,"^X","^13","^Z",7,"^[",true,"^M",["^N",["^O",["^N",[["^2<","^2=","^2>","^2?","^2@","^2A","^2B"]]]]],"^1D",["^=",["^1=","^1?"]],"^R","Positional factory function for clairvoyant.core/t_clairvoyant$core24739."],"~$->t_clairvoyant$core24755",["^ ","^F",null,"^G",["^ ","^1A",true,"^1;",["^=",["^1<","^16","^1=","^1>","^1?"]],"^1D",["^=",["^1=","^1?"]],"^2:","^2;","^M",["^N",["^O",["^N",[["^2?","^1K","^2A","^2@","^1I","~$p__24752","^2>","^2=","~$map__24753","~$meta24756"]]]]],"^R","Positional factory function for clairvoyant.core/t_clairvoyant$core24755.","^H",null],"^1;",["^=",["^1<","^16","^1=","^1>","^1?"]],"^>","~$clairvoyant.core/->t_clairvoyant$core24755","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^T",["^N",[["^2?","^1K","^2A","^2@","^1I","^2E","^2>","^2=","^2F","^2G"]]],"^U",null,"^V",["^N",[null,null]],"^1A",true,"^J",5,"^W",false,"^2:","^2;","^I",200,"^X","^24","^Z",10,"^[",true,"^M",["^N",["^O",["^N",[["^2?","^1K","^2A","^2@","^1I","^2E","^2>","^2=","^2F","^2G"]]]]],"^1D",["^=",["^1=","^1?"]],"^R","Positional factory function for clairvoyant.core/t_clairvoyant$core24755."],"~$trace-exit",["^ ","^F",null,"^G",["^ ","^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^I",31,"^J",7,"^K",31,"^L",17,"^M",["^N",["^O",["^N",[["^P","^Q"]]]]],"^R","Call the -trace-exit method for a given tracer with trace-data.\n  tracer must satisfy ITraceExit."],"^>","~$clairvoyant.core/trace-exit","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",17,"^T",["^N",[["^P","^Q"]]],"^U",null,"^V",["^N",[null,null]],"^J",1,"^W",false,"^I",31,"^X","^Y","^K",31,"^Z",2,"^[",true,"^M",["^N",["^O",["^N",[["^P","^Q"]]]]],"^R","Call the -trace-exit method for a given tracer with trace-data.\n  tracer must satisfy ITraceExit."],"~$t_clairvoyant$core24755",["^ ","^1:",10,"^1;",["^=",["^1<","^16","^1=","^1>","^1?"]],"^>","^24","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^1@",true,"^1A",true,"^J",5,"^I",200,"^1B",false,"^12","^1C","^1D",["^=",["^1=","^1?"]]],"~$ITraceExit",["^ ","^G",["^ ","^1Z",true,"^H","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/clairvoyant/core.cljs","^L",24,"^J",14,"^I",13,"^1[",["^ ","^20",["^ ","^1E",[["^17","^Q"]]]],"^K",13,"^R",null,"^21",["^N",["@interface"]]],"^1Z",true,"^>","^1>","^H","resources/public/js/compiled/out/clairvoyant/core.cljs","^L",24,"^J",1,"^I",13,"^1[",["^ ","^20",["^ ","^1E",[["^17","^Q"]]]],"^22",null,"^K",13,"^12","^Y","^23",["^=",["^13","^24"]],"^R",null,"^21",["^N",["@interface"]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^=",["~:args","~$&","^2<","^2?","^1K","~:dispatch-val","^2B","~:color","^2A","~:exit","~:init","~:else","^15","~$deftype","~:ns","^>","~:arglist","~$let","^2@","~$cljs.core/defn-","~$cljs.core/defn","~$fn","^1I","~:op","~$defn","^2E","~$cljs.core/extend-protocol","~$cljs.core/let","~$extend-type","~$defmethod","~$cljs.core/defrecord","~$extend-protocol","~:anonymous?","~$reify","~$fn*","~$defn-","~$cljs.core/reify","^2>","~$cljs.core/deftype","^2G","~$cljs.core/fn","~$cljs.core/defmethod","^2=","~$binding","~:error","~:form","~$cljs.core/extend-type","^2F","~$defrecord","~:ex-data"]],"~:order",["^31","^2V","^34","^2W","^37","^3<","^35","^33","^39","^36","^38","^3@","^3;","^2Z","^3F","^3=","^3A","^30","^3?","^3E","^3>","^2[","^3D","^2Q","^2R","^15","^2U","^2X","^>","^2Y","^32","^3:","~$&","^3B","^2T","^3C","^3G","^2<","^2=","^2>","^2?","^2@","^2A","^2B","^2S","^1K","^1I","^2E","^2F","^2G"]],"^R",null]