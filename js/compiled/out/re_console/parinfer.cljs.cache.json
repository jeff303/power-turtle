["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$join","~$clojure.string"],"~:excludes",["~#set",[]],"~:name","~$re-console.parinfer","~:imports",null,"~:requires",["^ ","^4","^4","~$re-frame.core","^;","~$indent-mode","~$parinfer.indent-mode","^=","^=","~$paren-mode","~$parinfer.paren-mode","^?","^?","~$common","~$re-console.common","^A","^A"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$subscribe","^;","^3","^4","~$dispatch-sync","^;","~$dispatch","^;"],"~:defs",["^ ","~$update-cursor-fn",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","~:line",11,"~:column",7,"~:end-line",11,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^Q",[["~$console-key"]]]]],"~:doc","Correctly position cursor after text that was just typed.\n  We need this since reformatting the text can shift things forward past our cursor."],"^7","~$re-console.parinfer/update-cursor-fn","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",23,"~:method-params",["^Q",[["^S"]]],"~:protocol-impl",null,"~:arglists-meta",["^Q",[null,null]],"^M",1,"~:variadic?",false,"^L",11,"~:ret-tag","~$function","^N",11,"~:max-fixed-arity",1,"~:fn-var",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Correctly position cursor after text that was just typed.\n  We need this since reformatting the text can shift things forward past our cursor."],"~$compute-cursor-dx",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",47,"^M",7,"^N",47,"^O",24,"^P",["^Q",["^R",["^Q",[["~$cursor","~$change"]]]]]],"^7","~$re-console.parinfer/compute-cursor-dx","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",24,"^V",["^Q",[["^13","^14"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",47,"^Z",["^6",["~$number","~$clj-nil"]],"^N",47,"^10",2,"^11",true,"^P",["^Q",["^R",["^Q",[["^13","^14"]]]]]],"~$compute-cm-change",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",65,"^M",7,"^N",65,"^O",24,"^P",["^Q",["^R",["^Q",[["~$cm","^14","~$options","~$prev-state"]]]]]],"^7","~$re-console.parinfer/compute-cm-change","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",24,"^V",["^Q",[["^19","^14","^1:","^1;"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",65,"^Z","~$cljs.core/IMap","^N",65,"^10",4,"^11",true,"^P",["^Q",["^R",["^Q",[["^19","^14","^1:","^1;"]]]]]],"~$fix-text-fn",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",84,"^M",7,"^N",84,"^O",18,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Correctly format the text from the given editor."],"^7","~$re-console.parinfer/fix-text-fn","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",18,"^V",["^Q",[["^S"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",84,"^Z","^[","^N",84,"^10",1,"^11",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Correctly format the text from the given editor."],"~$before-change",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",136,"^M",7,"^N",136,"^O",20,"^P",["^Q",["^R",["^Q",[["^19","^14"]]]]],"^T","Called before any change is applied to the editor."],"^7","~$re-console.parinfer/before-change","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",20,"^V",["^Q",[["^19","^14"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",136,"^Z",["^6",["~$any","^17"]],"^N",136,"^10",2,"^11",true,"^P",["^Q",["^R",["^Q",[["^19","^14"]]]]],"^T","Called before any change is applied to the editor."],"~$on-change",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",145,"^M",7,"^N",145,"^O",16,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after any change is applied to the editor."],"^7","~$re-console.parinfer/on-change","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",16,"^V",["^Q",[["^S"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",145,"^Z","^[","^N",145,"^10",1,"^11",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after any change is applied to the editor."],"~$on-cursor-activity",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",164,"^M",7,"^N",164,"^O",25,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after the cursor moves in the editor."],"^7","~$re-console.parinfer/on-cursor-activity","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",25,"^V",["^Q",[["^S"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",164,"^Z","^[","^N",164,"^10",1,"^11",true,"^P",["^Q",["^R",["^Q",[["^S"]]]]],"^T","Called after the cursor moves in the editor."],"~$parinferize!",["^ ","^I",null,"^J",["^ ","^K","/Users/timothy/git/power-turtle/resources/public/js/compiled/out/re_console/parinfer.cljs","^L",182,"^M",7,"^N",182,"^O",19,"^P",["^Q",["^R",["^Q",[["^19","^S"]]]]],"^T","Add parinfer goodness to a codemirror editor"],"^7","~$re-console.parinfer/parinferize!","^K","resources/public/js/compiled/out/re_console/parinfer.cljs","^O",19,"^V",["^Q",[["^19","^S"]]],"^W",null,"^X",["^Q",[null,null]],"^M",1,"^Y",false,"^L",182,"^Z","^1B","^N",182,"^10",2,"^11",true,"^P",["^Q",["^R",["^Q",[["^19","^S"]]]]],"^T","Add parinfer goodness to a codemirror editor"]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:get-console","~:set-console-frame-updated","~:get-console-mode","~:cursor-line","~:start-line","~:valid?","~:else","~:num-new-lines","~:cursor-x","~:get-prompt","~:state","~:cursor-dx","~:get-console-frame-updated","~:get-console-on-before-change","~:get-console-on-after-change","~:console-set-text","~:line-no","^N","~:new-line","~:change","~:none","~:use-cache?","~:text","~:get-console-eval-opts"]],"~:order",["^1M","^1S","^1Q","^N","^1T","^1P","^21","^22","^1O","^27","^23","^25","^1U","^1X","^1R","^1W","^26","^20","^1V","^1Z","^1[","^24","^1N","^1Y"]],"^T","Glues Parinfer's formatter to a CodeMirror editor"]